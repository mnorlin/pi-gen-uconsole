# The name of the image to build with the current stage directories. Use this variable to set the root name of your OS, eg IMG_NAME=Frobulator. Export files in stages may add suffixes to IMG_NAME.
# Default: raspios-$RELEASE-$ARCH, for example: raspios-trixie-armhf
export IMG_NAME=


# The release version to build images against. Valid values are any supported Debian release. However, since different releases will have different sets of packages available, you'll need to either modify your stages accordingly, or checkout the appropriate branch. For example, if you'd like to build a bullseye image, you should do so from the bullseye branch.
# Default: trixie
RELEASE=trixie

# An additional temporary apt repo to be used during the build process. This could be useful if you require pre-release software to be included in the image. The variable should contain sources in one-line-style format. "RELEASE" will be replaced with the RELEASE variable.
TEMP_REPO=

# Compression of the built image
# Set to:
#   none to deploy the actual image (.img)
#   zip to deploy a zipped image (.zip)
#   gz to deploy a gzipped image (.img.gz)
#   xz to deploy a xzipped image (.img.xz)
# Default: zip
DEPLOY_COMPRESSION=zip

# Setting to '1' enables the QEMU mode - creating an image that can be mounted via QEMU for an emulated environment. These images include "-qemu" in the image file name.
# Default: 0
USE_QEMU=0

# Default system locale.
# Default: en_GB.UTF-8
LOCALE_DEFAULT=en_US.UTF-8

# Setting the hostname to the specified value.
# Default: raspberrypi
TARGET_HOSTNAME=uconsole

# Default keyboard keymap.
# To get the current value from a running system, run debconf-show keyboard-configuration and look at the keyboard-configuration/xkb-keymap value.
# Default: gb
KEYBOARD_KEYMAP=us

# Default keyboard layout.
# To get the current value from a running system, run debconf-show keyboard-configuration and look at the keyboard-configuration/variant value.
# Default:  'English (UK)'
KEYBOARD_LAYOUT="English (US)"

# Default time zone.
# To get the current value from a running system, look in /etc/timezone.
# Default: 'Europe/London'
TIMEZONE_DEFAULT=

   
# Sets the default WLAN regulatory domain and unblocks WLAN interfaces. This should be a 2-letter ISO/IEC 3166 country Code, i.e. GB
WPA_COUNTRY=SE

   
# Setting to 1 will enable ssh server for remote log in. Note that if you are using a common password such as the defaults there is a high risk of attackers taking over you Raspberry Pi.
# Default: 0
ENABLE_SSH=

# Setting this to a value will make that value the contents of the FIRST_USER_NAME's ~/.ssh/authorized_keys. Obviously the value should therefore be a valid authorized_keys file. Note that this does not automatically enable SSH.
PUBKEY_SSH_FIRST_USER=

# Setting to 1 will disable password authentication for SSH and enable public key authentication. Note that if SSH is not enabled this will take effect when SSH becomes enabled.
# Default: 0
PUBKEY_ONLY_SSH=

# If set, then instead of working through the numeric stages in order, this list will be followed. For example setting to "stage0 stage1 mystage stage2" will run the contents of mystage before stage2. Note that quotes are needed around the list. An absolute or relative path can be given for stages outside the pi-gen directory.
# Default: stage*
STAGE_LIST=

# If set to 1, cloud-init and netplan will be installed and configured. This will allow you to configure your Raspberry Pi using cloud-init configuration files. The cloud-init configuration files should be placed in the bootfs or by editing the files in stage2/04-cloud-init/files. Cloud-init will be configured to read them on first boot.
# Default: 1

ENABLE_CLOUD_INIT=